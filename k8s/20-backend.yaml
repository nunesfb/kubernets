apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: app
spec:
  selector: { app: api }
  ports:
    - port: 3000
      targetPort: 3000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: app
spec:
  replicas: 2
  selector: { matchLabels: { app: api } }
  template:
    metadata:
      labels: { app: api }
    spec:
      containers:
        - name: api
          image: k8s-demo/api:1.0.0
          imagePullPolicy: IfNotPresent
          ports: [ { containerPort: 3000 } ]
          envFrom:
            - configMapRef: { name: app-config }
          env:
            - name: PGPASSWORD
              valueFrom: { secretKeyRef: { name: postgres-secret, key: POSTGRES_PASSWORD } }
          readinessProbe:
            httpGet: { path: /readyz, port: 3000 }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /healthz, port: 3000 }
            initialDelaySeconds: 10
            periodSeconds: 10
